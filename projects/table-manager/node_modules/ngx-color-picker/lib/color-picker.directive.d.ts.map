{"version":3,"file":"color-picker.directive.d.ts","sources":["C:/Users/krola/github_repos/ngx-table-manager/projects/table-manager/node_modules/ngx-color-picker/lib/color-picker.directive.d.ts"],"sourcesContent":["import { OnChanges, OnDestroy, EventEmitter, ApplicationRef, ElementRef, ViewContainerRef, Injector, ComponentFactoryResolver } from '@angular/core';\nimport { ColorPickerService } from './color-picker.service';\nimport { AlphaChannel, ColorMode, OutputFormat } from './helpers';\nexport declare class ColorPickerDirective implements OnChanges, OnDestroy {\n    private injector;\n    private cfr;\n    private appRef;\n    private vcRef;\n    private elRef;\n    private _service;\n    private dialog;\n    private dialogCreated;\n    private ignoreChanges;\n    private cmpRef;\n    private viewAttachedToAppRef;\n    colorPicker: string;\n    cpWidth: string;\n    cpHeight: string;\n    cpToggle: boolean;\n    cpDisabled: boolean;\n    cpIgnoredElements: any;\n    cpFallbackColor: string;\n    cpColorMode: ColorMode;\n    cpCmykEnabled: boolean;\n    cpOutputFormat: OutputFormat;\n    cpAlphaChannel: AlphaChannel;\n    cpDisableInput: boolean;\n    cpDialogDisplay: string;\n    cpSaveClickOutside: boolean;\n    cpCloseClickOutside: boolean;\n    cpUseRootViewContainer: boolean;\n    cpPosition: string;\n    cpPositionOffset: string;\n    cpPositionRelativeToArrow: boolean;\n    cpOKButton: boolean;\n    cpOKButtonText: string;\n    cpOKButtonClass: string;\n    cpCancelButton: boolean;\n    cpCancelButtonText: string;\n    cpCancelButtonClass: string;\n    cpPresetLabel: string;\n    cpPresetColors: string[];\n    cpPresetColorsClass: string;\n    cpMaxPresetColorsLength: number;\n    cpPresetEmptyMessage: string;\n    cpPresetEmptyMessageClass: string;\n    cpAddColorButton: boolean;\n    cpAddColorButtonText: string;\n    cpAddColorButtonClass: string;\n    cpRemoveColorButtonClass: string;\n    cpInputChange: EventEmitter<{\n        input: string;\n        value: string | number;\n        color: string;\n    }>;\n    cpToggleChange: EventEmitter<boolean>;\n    cpSliderChange: EventEmitter<{\n        slider: string;\n        value: string | number;\n        color: string;\n    }>;\n    cpSliderDragEnd: EventEmitter<{\n        slider: string;\n        color: string;\n    }>;\n    cpSliderDragStart: EventEmitter<{\n        slider: string;\n        color: string;\n    }>;\n    colorPickerOpen: EventEmitter<string>;\n    colorPickerClose: EventEmitter<string>;\n    colorPickerCancel: EventEmitter<string>;\n    colorPickerSelect: EventEmitter<string>;\n    colorPickerChange: EventEmitter<string>;\n    cpCmykColorChange: EventEmitter<string>;\n    cpPresetColorsChange: EventEmitter<any>;\n    handleClick(): void;\n    handleFocus(): void;\n    handleInput(event: any): void;\n    constructor(injector: Injector, cfr: ComponentFactoryResolver, appRef: ApplicationRef, vcRef: ViewContainerRef, elRef: ElementRef, _service: ColorPickerService);\n    ngOnDestroy(): void;\n    ngOnChanges(changes: any): void;\n    openDialog(): void;\n    closeDialog(): void;\n    cmykChanged(value: string): void;\n    stateChanged(state: boolean): void;\n    colorChanged(value: string, ignore?: boolean): void;\n    colorSelected(value: string): void;\n    colorCanceled(): void;\n    inputFocus(): void;\n    inputChange(event: any): void;\n    inputChanged(event: any): void;\n    sliderChanged(event: any): void;\n    sliderDragEnd(event: {\n        slider: string;\n        color: string;\n    }): void;\n    sliderDragStart(event: {\n        slider: string;\n        color: string;\n    }): void;\n    presetColorsChanged(value: any[]): void;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;"}