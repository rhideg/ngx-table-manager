{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-color-picker/lib/formats.ts","ng://ngx-color-picker/lib/helpers.ts","ng://ngx-color-picker/lib/color-picker.service.ts","ng://ngx-color-picker/lib/color-picker.component.ts","ng://ngx-color-picker/lib/color-picker.directive.ts","ng://ngx-color-picker/lib/color-picker.module.ts"],"names":["ColorFormats","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","g","b","a","this","h","s","v","l","m","y","k","TextDirective","newValue","EventEmitter","prototype","inputChange","event","value","undefined","rg","emit","numeric","parseFloat","Input","Output","HostListener","Directive","selector","SliderDirective","elRef","_this","dragEnd","dragStart","listenerMove","move","listenerStop","stop","mouseDown","start","touchStart","preventDefault","setCursor","stopPropagation","document","addEventListener","removeEventListener","getX","position","nativeElement","getBoundingClientRect","pageX","touches","left","window","pageXOffset","getY","pageY","top","pageYOffset","width","offsetWidth","height","offsetHeight","x","Math","max","min","rgX","rgY","ElementRef","SliderPosition","SliderDimension","ColorPickerService","active","setActive","cpDialogDisplay","closeDialog","hsva2hsla","hsva","Hsla","abs","hsla2hsva","hsla","Hsva","hsvaToRgba","floor","f","p","q","t","Rgba","cmykToRgb","cmyk","rgbaToCmyk","rgba","Cmyk","rgbaToHsva","rgbaToHex","allowHex8","hex","toString","substr","round","normalizeCMYK","denormalizeCMYK","denormalizeRGBA","stringToHsva","colorString","toLowerCase","stringParsers","re","parse","execResult","parseInt","isNaN","push","hasOwnProperty","parser","match","exec","color","outputFormat","alphaChannel","hslaText","Injectable","ColorPickerComponent","cdRef","service","isIE10","dialogArrowSize","dialogArrowOffset","dialogInputFields","HEX","RGBA","HSLA","CMYK","useRootViewContainer","handleEsc","show","onCancelColor","handleEnter","onAcceptColor","ngOnInit","slider","hueWidth","hueSlider","alphaWidth","alphaSlider","sliderDimMax","cpWidth","cpCmykEnabled","format","cpOutputFormat","listenerMouseDown","onMouseDown","listenerResize","onResize","openDialog","initialColor","ngOnDestroy","ngAfterViewInit","updateColorPicker","detectChanges","directiveElementRef","setInitialColor","setColorFromString","openColorPicker","closeColorPicker","setupDialog","instance","elementRef","cpHeight","cpFallbackColor","cpColorMode","cpAlphaChannel","cpDisableInput","cpIgnoredElements","cpSaveClickOutside","cpCloseClickOutside","cpUseRootViewContainer","cpPosition","cpPositionOffset","cpPositionRelativeToArrow","cpPresetLabel","cpPresetColors","cpPresetColorsClass","cpMaxPresetColorsLength","cpPresetEmptyMessage","cpPresetEmptyMessageClass","cpOKButton","cpOKButtonClass","cpOKButtonText","cpCancelButton","cpCancelButtonClass","cpCancelButtonText","cpAddColorButton","cpAddColorButtonClass","cpAddColorButtonText","cpRemoveColorButtonClass","setColorMode","ua","navigator","userAgent","msie","indexOf","substring","detectIE","directiveInstance","fallbackColor","setPresetConfig","mode","toUpperCase","update","sliderH","setDialogPosition","onDragEnd","sliderDragEnd","outputColor","onDragStart","sliderDragStart","isDescendant","filter","item","colorSelected","cmykChanged","cmykColor","colorChanged","colorCanceled","onFormatToggle","change","availableFormats","nextFormat","onColorChange","sliderChanged","onHueChange","onValueChange","onAlphaChange","onHexInput","validHex","valid","test","split","map","join","inputChanged","input","onRedInput","onBlueInput","onGreenInput","onHueInput","onValueInput","onAlphaInput","onLightnessInput","onSaturationInput","onCyanInput","onMagentaInput","onYellowInput","onBlackInput","onAddPresetColor","concat","presetColorsChanged","onRemovePresetColor","hidden","setTimeout","stateChanged","cmykInput","hue","lastOutput","rgbaText","cmykText","hexText","hexAlpha","hueSliderColor","alphaSliderColor","selectedColor","alpha","transform","style","parentNode","transformNode","node","dialogHeight","dialogElement","tagName","getComputedStyle","getPropertyValue","boxDirective","createDialogBox","HTMLUnknownElement","boxParent","usePosition","usePositionX","usePositionY","winWidth","documentElement","clientWidth","innerWidth","winHeight","clientHeight","innerHeight","cpUsePosition","arrowTop","parent","child","element","offset","ChangeDetectorRef","ViewChild","static","Component","template","encapsulation","ViewEncapsulation","None","ColorPickerDirective","injector","cfr","appRef","vcRef","_service","dialogCreated","ignoreChanges","viewAttachedToAppRef","cpToggle","cpDisabled","cpInputChange","cpToggleChange","cpSliderChange","cpSliderDragEnd","cpSliderDragStart","colorPickerOpen","colorPickerClose","colorPickerCancel","colorPickerSelect","colorPickerChange","cpCmykColorChange","cpPresetColorsChange","handleClick","inputFocus","handleFocus","handleInput","cmpRef","detachView","hostView","destroy","dialog","ngOnChanges","changes","currentValue","colorPicker","changeDetectorRef","classOfRootComponent","componentTypes","appInstance","get","Injector","NULL","viewContainerRef","console","warn","compFactory","resolveComponentFactory","create","attachView","body","appendChild","rootNodes","ReflectiveInjector","fromResolvedProviders","parentInjector","createComponent","state","ignore","ignored","activeElement","ComponentFactoryResolver","ApplicationRef","ViewContainerRef","exportAs","ColorPickerModule","NgModule","imports","CommonModule","exports","providers","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum ColorFormats {\n  HEX,\n  RGBA,\n  HSLA,\n  CMYK\n}\n\nexport class Rgba {\n  constructor(public r: number, public g: number, public b: number, public a: number) {}\n}\n\nexport class Hsva {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n\nexport class Hsla {\n  constructor(public h: number, public s: number, public l: number, public a: number) {}\n}\n\nexport class Cmyk {\n  constructor(public c: number, public m: number, public y: number, public k: number, public a: number = 1) {}\n}\n","import { Directive, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\n\nexport type ColorMode = 'color' | 'c' | '1' |\n  'grayscale' | 'g' | '2' | 'presets' | 'p' | '3';\n\nexport type AlphaChannel = 'enabled' | 'disabled' | 'always' | 'forced';\n\nexport type OutputFormat = 'auto' | 'hex' | 'rgba' | 'hsla';\n\nexport function detectIE(): boolean | number {\n  let ua = '';\n\n  if (typeof navigator !== 'undefined') {\n    ua = navigator.userAgent.toLowerCase();\n  }\n\n  const msie = ua.indexOf('msie ');\n\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n  }\n\n  // Other browser\n  return false;\n}\n\n@Directive({\n  selector: '[text]'\n})\nexport class TextDirective {\n  @Input() rg: number;\n  @Input() text: any;\n\n  @Output() newValue = new EventEmitter<any>();\n\n  @HostListener('input', ['$event']) inputChange(event: any): void {\n    const value = event.target.value;\n\n    if (this.rg === undefined) {\n      this.newValue.emit(value);\n    } else {\n      const numeric = parseFloat(value);\n\n      this.newValue.emit({ v: numeric, rg: this.rg });\n    }\n  }\n}\n\n@Directive({\n  selector: '[slider]'\n})\nexport class SliderDirective {\n  private listenerMove: any;\n  private listenerStop: any;\n\n  @Input() rgX: number;\n  @Input() rgY: number;\n\n  @Input() slider: string;\n\n  @Output() dragEnd = new EventEmitter();\n  @Output() dragStart = new EventEmitter();\n\n  @Output() newValue = new EventEmitter<any>();\n\n  @HostListener('mousedown', ['$event']) mouseDown(event: any): void {\n    this.start(event);\n  }\n\n  @HostListener('touchstart', ['$event']) touchStart(event: any): void {\n    this.start(event);\n  }\n\n  constructor(private elRef: ElementRef) {\n    this.listenerMove = (event: any) => this.move(event);\n\n    this.listenerStop = () => this.stop();\n  }\n\n  private move(event: any): void {\n    event.preventDefault();\n\n    this.setCursor(event);\n  }\n\n  private start(event: any): void {\n    this.setCursor(event);\n\n    event.stopPropagation();\n\n    document.addEventListener('mouseup', this.listenerStop);\n    document.addEventListener('touchend', this.listenerStop);\n    document.addEventListener('mousemove', this.listenerMove);\n    document.addEventListener('touchmove', this.listenerMove);\n\n    this.dragStart.emit();\n  }\n\n  private stop(): void {\n    document.removeEventListener('mouseup', this.listenerStop);\n    document.removeEventListener('touchend', this.listenerStop);\n    document.removeEventListener('mousemove', this.listenerMove);\n    document.removeEventListener('touchmove', this.listenerMove);\n\n    this.dragEnd.emit();\n  }\n\n  private getX(event: any): number {\n    const position = this.elRef.nativeElement.getBoundingClientRect();\n\n    const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX;\n\n    return pageX - position.left - window.pageXOffset;\n  }\n\n  private getY(event: any): number {\n    const position = this.elRef.nativeElement.getBoundingClientRect();\n\n    const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY;\n\n    return pageY - position.top - window.pageYOffset;\n  }\n\n  private setCursor(event: any): void {\n    const width = this.elRef.nativeElement.offsetWidth;\n    const height = this.elRef.nativeElement.offsetHeight;\n\n    const x = Math.max(0, Math.min(this.getX(event), width));\n    const y = Math.max(0, Math.min(this.getY(event), height));\n\n    if (this.rgX !== undefined && this.rgY !== undefined) {\n      this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY });\n    } else if (this.rgX === undefined && this.rgY !== undefined) {\n      this.newValue.emit({ v: y / height, rgY: this.rgY });\n    } else if (this.rgX !== undefined && this.rgY === undefined) {\n      this.newValue.emit({ v: x / width, rgX: this.rgX });\n    }\n  }\n}\n\nexport class SliderPosition {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n\nexport class SliderDimension {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Cmyk, Rgba, Hsla, Hsva } from './formats';\n\nimport { ColorPickerComponent } from './color-picker.component';\n\n@Injectable()\nexport class ColorPickerService {\n  private active: ColorPickerComponent | null = null;\n\n  constructor() {}\n\n  public setActive(active: ColorPickerComponent | null): void {\n    if (this.active && this.active !== active && this.active.cpDialogDisplay !== 'inline') {\n      this.active.closeDialog();\n    }\n\n    this.active = active;\n  }\n\n  public hsva2hsla(hsva: Hsva): Hsla {\n    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n\n    if (v === 0) {\n      return new Hsla(h, 0, 0, a);\n    } else if (s === 0 && v === 1) {\n      return new Hsla(h, 1, 1, a);\n    } else {\n      const l = v * (2 - s) / 2;\n\n      return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a);\n    }\n  }\n\n  public hsla2hsva(hsla: Hsla): Hsva {\n    const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);\n    const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n\n    if (l === 0) {\n      return new Hsva(h, 0, 0, a);\n    } else {\n      const v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n\n      return new Hsva(h, 2 * (v - l) / v, v, a);\n    }\n  }\n\n  public hsvaToRgba(hsva: Hsva): Rgba {\n    let r: number, g: number, b: number;\n\n    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v, g = t, b = p;\n        break;\n      case 1:\n        r = q, g = v, b = p;\n        break;\n      case 2:\n        r = p, g = v, b = t;\n        break;\n      case 3:\n        r = p, g = q, b = v;\n        break;\n      case 4:\n        r = t, g = p, b = v;\n        break;\n      case 5:\n        r = v, g = p, b = q;\n        break;\n      default:\n        r = 0, g = 0, b = 0;\n    }\n\n    return new Rgba(r, g, b, a);\n  }\n\n  public cmykToRgb(cmyk: Cmyk): Rgba {\n    const r = ( 1 - cmyk.c ) * (1 - cmyk.k);\n    const g = ( 1 - cmyk.m ) * (1 - cmyk.k);\n    const b = ( 1 - cmyk.y ) * (1 - cmyk.k);\n\n    return new Rgba(r, g, b, cmyk.a);\n  }\n\n  public rgbaToCmyk(rgba: Rgba): Cmyk {\n    const k: number = 1 - Math.max(rgba.r, rgba.g, rgba.b);\n\n    if (k === 1) {\n      return new Cmyk(0, 0, 0, 1, rgba.a);\n    } else {\n      const c = (1 - rgba.r - k) / (1 - k);\n      const m = (1 - rgba.g - k) / (1 - k);\n      const y = (1 - rgba.b - k) / (1 - k);\n\n      return new Cmyk(c, m, y, k, rgba.a);\n    }\n  }\n\n  public rgbaToHsva(rgba: Rgba): Hsva {\n    let h: number, s: number;\n\n    const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);\n    const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n\n    const v: number = max, d = max - min;\n\n    s = (max === 0) ? 0 : d / max;\n\n    if (max === min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n\n      h /= 6;\n    }\n\n    return new Hsva(h, s, v, a);\n  }\n\n  public rgbaToHex(rgba: Rgba, allowHex8?: boolean): string {\n    /* tslint:disable:no-bitwise */\n    let hex = '#' + ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16).substr(1);\n\n    if (allowHex8) {\n      hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);\n    }\n    /* tslint:enable:no-bitwise */\n\n    return hex;\n  }\n\n  public normalizeCMYK(cmyk: Cmyk): Cmyk {\n    return new Cmyk(cmyk.c / 100, cmyk.m / 100, cmyk.y / 100, cmyk.k / 100, cmyk.a);\n  }\n\n  public denormalizeCMYK(cmyk: Cmyk): Cmyk {\n    return new Cmyk(Math.floor(cmyk.c * 100), Math.floor(cmyk.m * 100), Math.floor(cmyk.y * 100),\n      Math.floor(cmyk.k * 100), cmyk.a);\n  }\n\n  public denormalizeRGBA(rgba: Rgba): Rgba {\n    return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a);\n  }\n\n  public stringToHsva(colorString: string = '', allowHex8: boolean = false): Hsva | null {\n    let hsva: Hsva | null = null;\n\n    colorString = (colorString || '').toLowerCase();\n\n    const stringParsers = [\n      {\n        re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[2], 10) / 255,\n            parseInt(execResult[3], 10) / 255,\n            parseInt(execResult[4], 10) / 255,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      }, {\n        re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: function(execResult: any) {\n          return new Hsla(parseInt(execResult[2], 10) / 360,\n            parseInt(execResult[3], 10) / 100,\n            parseInt(execResult[4], 10) / 100,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      }\n    ];\n\n    if (allowHex8) {\n      stringParsers.push({\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            parseInt(execResult[4] || 'FF', 16) / 255);\n        }\n      });\n    } else {\n      stringParsers.push({\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            1);\n        }\n      });\n    }\n\n    stringParsers.push({\n      re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n      parse: function(execResult: any) {\n        return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\n          parseInt(execResult[2] + execResult[2], 16) / 255,\n          parseInt(execResult[3] + execResult[3], 16) / 255,\n          1);\n      }\n    });\n\n    for (const key in stringParsers) {\n      if (stringParsers.hasOwnProperty(key)) {\n        const parser = stringParsers[key];\n\n        const match = parser.re.exec(colorString), color: any = match && parser.parse(match);\n\n        if (color) {\n          if (color instanceof Rgba) {\n            hsva = this.rgbaToHsva(color);\n          } else if (color instanceof Hsla) {\n            hsva = this.hsla2hsva(color);\n          }\n\n          return hsva;\n        }\n      }\n    }\n\n    return hsva;\n  }\n\n  public outputFormat(hsva: Hsva, outputFormat: string, alphaChannel: string | null): string {\n    if (outputFormat === 'auto') {\n      outputFormat = hsva.a < 1 ? 'rgba' : 'hex';\n    }\n\n    switch (outputFormat) {\n      case 'hsla':\n        const hsla = this.hsva2hsla(hsva);\n\n        const hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n          Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n\n        if (hsva.a < 1 || alphaChannel === 'always') {\n          return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%,' +\n            hslaText.a + ')';\n        } else {\n          return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';\n        }\n\n      case 'rgba':\n        const rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n\n        if (hsva.a < 1 || alphaChannel === 'always') {\n          return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' +\n            Math.round(rgba.a * 100) / 100 + ')';\n        } else {\n          return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n        }\n\n      default:\n        const allowHex8 = (alphaChannel === 'always' || alphaChannel === 'forced');\n\n        return this.rgbaToHex(this.denormalizeRGBA(this.hsvaToRgba(hsva)), allowHex8);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, AfterViewInit,\n  ViewChild, HostListener, ViewEncapsulation,\n  ElementRef, ChangeDetectorRef } from '@angular/core';\n\nimport { detectIE } from './helpers';\n\nimport { ColorFormats, Cmyk, Hsla, Hsva, Rgba } from './formats';\nimport { AlphaChannel, OutputFormat, SliderDimension, SliderPosition } from './helpers';\n\nimport { ColorPickerService } from './color-picker.service';\n\n@Component({\n  selector: 'color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: [ './color-picker.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ColorPickerComponent implements OnInit, OnDestroy, AfterViewInit {\n  private isIE10: boolean = false;\n\n  private cmyk: Cmyk;\n  private hsva: Hsva;\n\n  private width: number;\n  private height: number;\n\n  private cmykColor: string;\n  private outputColor: string;\n  private initialColor: string;\n  private fallbackColor: string;\n\n  private listenerResize: any;\n  private listenerMouseDown: any;\n\n  private directiveInstance: any;\n\n  private sliderH: number;\n  private sliderDimMax: SliderDimension;\n  private directiveElementRef: ElementRef;\n\n  private dialogArrowSize: number = 10;\n  private dialogArrowOffset: number = 15;\n\n  private dialogInputFields: ColorFormats[] = [\n    ColorFormats.HEX,\n    ColorFormats.RGBA,\n    ColorFormats.HSLA,\n    ColorFormats.CMYK\n  ];\n\n  private useRootViewContainer: boolean = false;\n\n  public show: boolean;\n  public hidden: boolean;\n\n  public top: number;\n  public left: number;\n  public position: string;\n\n  public format: ColorFormats;\n  public slider: SliderPosition;\n\n  public hexText: string;\n  public hexAlpha: number;\n\n  public cmykText: Cmyk;\n  public hslaText: Hsla;\n  public rgbaText: Rgba;\n\n  public arrowTop: number;\n\n  public selectedColor: string;\n  public hueSliderColor: string;\n  public alphaSliderColor: string;\n\n  public cpWidth: number;\n  public cpHeight: number;\n\n  public cpColorMode: number;\n\n  public cpCmykEnabled: boolean;\n\n  public cpAlphaChannel: AlphaChannel;\n  public cpOutputFormat: OutputFormat;\n\n  public cpDisableInput: boolean;\n  public cpDialogDisplay: string;\n\n  public cpIgnoredElements: any;\n\n  public cpSaveClickOutside: boolean;\n  public cpCloseClickOutside: boolean;\n\n  public cpPosition: string;\n  public cpUsePosition: string;\n  public cpPositionOffset: number;\n\n  public cpOKButton: boolean;\n  public cpOKButtonText: string;\n  public cpOKButtonClass: string;\n\n  public cpCancelButton: boolean;\n  public cpCancelButtonText: string;\n  public cpCancelButtonClass: string;\n\n  public cpPresetLabel: string;\n  public cpPresetColors: string[];\n  public cpPresetColorsClass: string;\n  public cpMaxPresetColorsLength: number;\n\n  public cpPresetEmptyMessage: string;\n  public cpPresetEmptyMessageClass: string;\n\n  public cpAddColorButton: boolean;\n  public cpAddColorButtonText: string;\n  public cpAddColorButtonClass: string;\n  public cpRemoveColorButtonClass: string;\n\n  @ViewChild('dialogPopup', { static: true }) dialogElement: ElementRef;\n\n  @ViewChild('hueSlider', { static: true }) hueSlider: ElementRef;\n  @ViewChild('alphaSlider', { static: true }) alphaSlider: ElementRef;\n\n  @HostListener('document:keyup.esc', ['$event']) handleEsc(event: any): void {\n    if (this.show && this.cpDialogDisplay === 'popup') {\n      this.onCancelColor(event);\n    }\n  }\n\n  @HostListener('document:keyup.enter', ['$event']) handleEnter(event: any): void {\n    if (this.show && this.cpDialogDisplay === 'popup') {\n      this.onAcceptColor(event);\n    }\n  }\n\n  constructor(private elRef: ElementRef, private cdRef: ChangeDetectorRef, private service: ColorPickerService) {}\n\n  ngOnInit(): void {\n    this.slider = new SliderPosition(0, 0, 0, 0);\n\n    const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;\n    const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;\n\n    this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);\n\n    if (this.cpCmykEnabled) {\n      this.format = ColorFormats.CMYK;\n    } else if (this.cpOutputFormat === 'rgba') {\n      this.format = ColorFormats.RGBA;\n    } else if (this.cpOutputFormat === 'hsla') {\n      this.format = ColorFormats.HSLA;\n    } else {\n      this.format = ColorFormats.HEX;\n    }\n\n    this.listenerMouseDown = (event: any) => { this.onMouseDown(event); };\n    this.listenerResize = () => { this.onResize(); };\n\n    this.openDialog(this.initialColor, false);\n  }\n\n  ngOnDestroy(): void {\n    this.closeDialog();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.cpWidth !== 230 || this.cpDialogDisplay === 'inline') {\n      const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;\n      const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;\n\n      this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);\n\n      this.updateColorPicker(false);\n\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public openDialog(color: any, emit: boolean = true): void {\n    this.service.setActive(this);\n\n    if (!this.width) {\n      this.cpWidth = this.directiveElementRef.nativeElement.offsetWidth;\n    }\n\n    if (!this.height) {\n      this.height = 320;\n    }\n\n    this.setInitialColor(color);\n\n    this.setColorFromString(color, emit);\n\n    this.openColorPicker();\n  }\n\n  public closeDialog(): void {\n    this.closeColorPicker();\n  }\n\n  public setupDialog(instance: any, elementRef: ElementRef, color: any,\n    cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,\n    cpColorMode: string, cpCmykEnabled: boolean, cpAlphaChannel: AlphaChannel,\n    cpOutputFormat: OutputFormat, cpDisableInput: boolean, cpIgnoredElements: any,\n    cpSaveClickOutside: boolean, cpCloseClickOutside: boolean, cpUseRootViewContainer: boolean,\n    cpPosition: string, cpPositionOffset: string, cpPositionRelativeToArrow: boolean,\n    cpPresetLabel: string, cpPresetColors: string[], cpPresetColorsClass: string,\n    cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string,\n    cpPresetEmptyMessageClass: string, cpOKButton: boolean, cpOKButtonClass: string,\n    cpOKButtonText: string, cpCancelButton: boolean, cpCancelButtonClass: string,\n    cpCancelButtonText: string, cpAddColorButton: boolean, cpAddColorButtonClass: string,\n    cpAddColorButtonText: string, cpRemoveColorButtonClass: string): void\n  {\n    this.setInitialColor(color);\n\n    this.setColorMode(cpColorMode);\n\n    this.isIE10 = (detectIE() === 10);\n\n    this.directiveInstance = instance;\n    this.directiveElementRef = elementRef;\n\n    this.cpDisableInput = cpDisableInput;\n\n    this.cpCmykEnabled = cpCmykEnabled;\n    this.cpAlphaChannel = cpAlphaChannel;\n    this.cpOutputFormat = cpOutputFormat;\n\n    this.cpDialogDisplay = cpDialogDisplay;\n\n    this.cpIgnoredElements = cpIgnoredElements;\n\n    this.cpSaveClickOutside = cpSaveClickOutside;\n    this.cpCloseClickOutside = cpCloseClickOutside;\n\n    this.useRootViewContainer = cpUseRootViewContainer;\n\n    this.width = this.cpWidth = parseInt(cpWidth, 10);\n    this.height = this.cpHeight = parseInt(cpHeight, 10);\n\n    this.cpPosition = cpPosition;\n    this.cpPositionOffset = parseInt(cpPositionOffset, 10);\n\n    this.cpOKButton = cpOKButton;\n    this.cpOKButtonText = cpOKButtonText;\n    this.cpOKButtonClass = cpOKButtonClass;\n\n    this.cpCancelButton = cpCancelButton;\n    this.cpCancelButtonText = cpCancelButtonText;\n    this.cpCancelButtonClass = cpCancelButtonClass;\n\n    this.fallbackColor = cpFallbackColor || '#fff';\n\n    this.setPresetConfig(cpPresetLabel, cpPresetColors);\n\n    this.cpPresetColorsClass = cpPresetColorsClass;\n    this.cpMaxPresetColorsLength = cpMaxPresetColorsLength;\n    this.cpPresetEmptyMessage = cpPresetEmptyMessage;\n    this.cpPresetEmptyMessageClass = cpPresetEmptyMessageClass;\n\n    this.cpAddColorButton = cpAddColorButton;\n    this.cpAddColorButtonText = cpAddColorButtonText;\n    this.cpAddColorButtonClass = cpAddColorButtonClass;\n    this.cpRemoveColorButtonClass = cpRemoveColorButtonClass;\n\n    if (!cpPositionRelativeToArrow) {\n      this.dialogArrowOffset = 0;\n    }\n\n    if (cpDialogDisplay === 'inline') {\n      this.dialogArrowSize = 0;\n      this.dialogArrowOffset = 0;\n    }\n\n    if (cpOutputFormat === 'hex' &&\n        cpAlphaChannel !== 'always' && cpAlphaChannel !== 'forced')\n    {\n      this.cpAlphaChannel = 'disabled';\n    }\n  }\n\n  public setColorMode(mode: string): void {\n    switch (mode.toString().toUpperCase()) {\n      case '1':\n      case 'C':\n      case 'COLOR':\n        this.cpColorMode = 1;\n        break;\n      case '2':\n      case 'G':\n      case 'GRAYSCALE':\n        this.cpColorMode = 2;\n        break;\n      case '3':\n      case 'P':\n      case 'PRESETS':\n        this.cpColorMode = 3;\n        break;\n      default:\n        this.cpColorMode = 1;\n    }\n  }\n\n  public setInitialColor(color: any): void {\n    this.initialColor = color;\n  }\n\n  public setPresetConfig(cpPresetLabel: string, cpPresetColors: string[]): void {\n    this.cpPresetLabel = cpPresetLabel;\n    this.cpPresetColors = cpPresetColors;\n  }\n\n  public setColorFromString(value: string, emit: boolean = true, update: boolean = true): void {\n    let hsva: Hsva | null;\n\n    if (this.cpAlphaChannel === 'always' || this.cpAlphaChannel === 'forced') {\n      hsva = this.service.stringToHsva(value, true);\n\n      if (!hsva && !this.hsva) {\n        hsva = this.service.stringToHsva(value, false);\n      }\n    } else {\n      hsva = this.service.stringToHsva(value, false);\n    }\n\n    if (!hsva && !this.hsva) {\n      hsva = this.service.stringToHsva(this.fallbackColor, false);\n    }\n\n    if (hsva) {\n      this.hsva = hsva;\n\n      this.sliderH = this.hsva.h;\n\n      if (this.cpOutputFormat === 'hex' && this.cpAlphaChannel === 'disabled') {\n        this.hsva.a = 1;\n      }\n\n      this.updateColorPicker(emit, update);\n    }\n  }\n\n  public onResize(): void {\n    if (this.position === 'fixed') {\n      this.setDialogPosition();\n    } else if (this.cpDialogDisplay !== 'inline') {\n      this.closeColorPicker();\n    }\n  }\n\n  public onDragEnd(slider: string): void {\n    this.directiveInstance.sliderDragEnd({ slider: slider, color: this.outputColor });\n  }\n\n  public onDragStart(slider: string): void {\n    this.directiveInstance.sliderDragStart({ slider: slider, color: this.outputColor });\n  }\n\n  public onMouseDown(event: MouseEvent): void {\n    if (this.show &&\n        !this.isIE10 && this.cpDialogDisplay === 'popup' &&\n        event.target !== this.directiveElementRef.nativeElement &&\n        !this.isDescendant(this.elRef.nativeElement, event.target) &&\n        !this.isDescendant(this.directiveElementRef.nativeElement, event.target) &&\n        this.cpIgnoredElements.filter((item: any) => item === event.target).length === 0)\n    {\n      if (this.cpSaveClickOutside) {\n        this.directiveInstance.colorSelected(this.outputColor);\n      } else {\n        this.hsva = null;\n\n        this.setColorFromString(this.initialColor, false);\n\n        if (this.cpCmykEnabled) {\n          this.directiveInstance.cmykChanged(this.cmykColor);\n        }\n\n        this.directiveInstance.colorChanged(this.initialColor);\n\n        this.directiveInstance.colorCanceled();\n      }\n\n      if (this.cpCloseClickOutside) {\n        this.closeColorPicker();\n      }\n    }\n  }\n\n  public onAcceptColor(event: Event): void {\n    event.stopPropagation();\n\n    if (this.outputColor) {\n      this.directiveInstance.colorSelected(this.outputColor);\n    }\n\n    if (this.cpDialogDisplay === 'popup') {\n      this.closeColorPicker();\n    }\n  }\n\n  public onCancelColor(event: Event): void {\n    this.hsva = null;\n\n    event.stopPropagation();\n\n    this.setColorFromString(this.initialColor, true);\n\n    if (this.cpDialogDisplay === 'popup') {\n      if (this.cpCmykEnabled) {\n        this.directiveInstance.cmykChanged(this.cmykColor);\n      }\n\n      this.directiveInstance.colorChanged(this.initialColor, true);\n\n      this.closeColorPicker();\n    }\n\n    this.directiveInstance.colorCanceled();\n  }\n\n  public onFormatToggle(change: number): void {\n    const availableFormats = this.dialogInputFields.length -\n      (this.cpCmykEnabled ? 0 : 1);\n\n    const nextFormat = (((this.dialogInputFields.indexOf(this.format) + change) %\n      availableFormats) + availableFormats) % availableFormats;\n\n    this.format = this.dialogInputFields[nextFormat];\n  }\n\n  public onColorChange(value: { s: number, v: number, rgX: number, rgY: number }): void {\n    this.hsva.s = value.s / value.rgX;\n    this.hsva.v = value.v / value.rgY;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'lightness',\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n\n    this.directiveInstance.sliderChanged({\n      slider: 'saturation',\n      value: this.hsva.s,\n      color: this.outputColor\n    });\n  }\n\n  public onHueChange(value: { v: number, rgX: number }): void {\n    this.hsva.h = value.v / value.rgX;\n    this.sliderH = this.hsva.h;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'hue',\n      value: this.hsva.h,\n      color: this.outputColor\n    });\n  }\n\n  public onValueChange(value: { v: number, rgX: number }): void {\n    this.hsva.v = value.v / value.rgX;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'value',\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n  }\n\n  public onAlphaChange(value: { v: number, rgX: number }): void {\n    this.hsva.a = value.v / value.rgX;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'alpha',\n      value: this.hsva.a,\n      color: this.outputColor\n    });\n  }\n\n  public onHexInput(value: string | null): void {\n    if (value === null) {\n      this.updateColorPicker();\n    } else {\n      if (value && value[0] !== '#') {\n        value = '#' + value;\n      }\n\n      let validHex = /^#([a-f0-9]{3}|[a-f0-9]{6})$/gi;\n\n      if (this.cpAlphaChannel === 'always') {\n        validHex = /^#([a-f0-9]{3}|[a-f0-9]{6}|[a-f0-9]{8})$/gi;\n      }\n\n      const valid = validHex.test(value);\n\n      if (valid) {\n        if (value.length < 5) {\n          value = '#' + value.substring(1)\n            .split('')\n            .map(c => c + c)\n            .join('');\n        }\n\n        if (this.cpAlphaChannel === 'forced') {\n          value += Math.round(this.hsva.a * 255).toString(16);\n        }\n\n        this.setColorFromString(value, true, false);\n      }\n\n      this.directiveInstance.inputChanged({\n        input: 'hex',\n        valid: valid,\n        value: value,\n        color: this.outputColor\n      });\n    }\n  }\n\n  public onRedInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.r = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'red',\n      valid: valid,\n      value: rgba.r,\n      color: this.outputColor\n    });\n  }\n\n  public onBlueInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.b = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'blue',\n      valid: valid,\n      value: rgba.b,\n      color: this.outputColor\n    });\n  }\n\n  public onGreenInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.g = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'green',\n      valid: valid,\n      value: rgba.g,\n      color: this.outputColor\n    });\n  }\n\n  public onHueInput(value: { v: number, rg: number }) {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.h = value.v / value.rg;\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'hue',\n      valid: valid,\n      value: this.hsva.h,\n      color: this.outputColor\n    });\n  }\n\n  public onValueInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.v = value.v / value.rg;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'value',\n      valid: valid,\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n  }\n\n  public onAlphaInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.a = value.v / value.rg;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'alpha',\n      valid: valid,\n      value: this.hsva.a,\n      color: this.outputColor\n    });\n  }\n\n  public onLightnessInput(value: { v: number, rg: number }): void {\n    const hsla = this.service.hsva2hsla(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      hsla.l = value.v / value.rg;\n\n      this.hsva = this.service.hsla2hsva(hsla);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'lightness',\n      valid: valid,\n      value: hsla.l,\n      color: this.outputColor\n    });\n  }\n\n  public onSaturationInput(value: { v: number, rg: number }): void {\n    const hsla = this.service.hsva2hsla(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      hsla.s = value.v / value.rg;\n\n      this.hsva = this.service.hsla2hsva(hsla);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'saturation',\n      valid: valid,\n      value: hsla.s,\n      color: this.outputColor\n    });\n  }\n\n  public onCyanInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.c = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'cyan',\n      valid: true,\n      value: this.cmyk.c,\n      color: this.outputColor\n    });\n  }\n\n   public onMagentaInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.m = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'magenta',\n      valid: true,\n      value: this.cmyk.m,\n      color: this.outputColor\n    });\n  }\n\n  public onYellowInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.y = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'yellow',\n      valid: true,\n      value: this.cmyk.y,\n      color: this.outputColor\n    });\n  }\n\n   public onBlackInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.k = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'black',\n      valid: true,\n      value: this.cmyk.k,\n      color: this.outputColor\n    });\n  }\n\n  public onAddPresetColor(event: any, value: string): void {\n    event.stopPropagation();\n\n    if (!this.cpPresetColors.filter((color) => (color === value)).length) {\n      this.cpPresetColors = this.cpPresetColors.concat(value);\n\n      this.directiveInstance.presetColorsChanged(this.cpPresetColors);\n    }\n  }\n\n  public onRemovePresetColor(event: any, value: string): void {\n    event.stopPropagation();\n\n    this.cpPresetColors = this.cpPresetColors.filter((color) => (color !== value));\n\n    this.directiveInstance.presetColorsChanged(this.cpPresetColors);\n  }\n\n  // Private helper functions for the color picker dialog status\n\n  private openColorPicker(): void {\n    if (!this.show) {\n      this.show = true;\n      this.hidden = true;\n\n      setTimeout(() => {\n        this.hidden = false;\n\n        this.setDialogPosition();\n\n        this.cdRef.detectChanges();\n      }, 0);\n\n      this.directiveInstance.stateChanged(true);\n\n      if (!this.isIE10) {\n        document.addEventListener('mousedown', this.listenerMouseDown);\n        document.addEventListener('touchstart', this.listenerMouseDown);\n      }\n\n      window.addEventListener('resize', this.listenerResize);\n    }\n  }\n\n  private closeColorPicker(): void {\n    if (this.show) {\n      this.show = false;\n\n      this.directiveInstance.stateChanged(false);\n\n      if (!this.isIE10) {\n        document.removeEventListener('mousedown', this.listenerMouseDown);\n        document.removeEventListener('touchstart', this.listenerMouseDown);\n      }\n\n      window.removeEventListener('resize', this.listenerResize);\n\n      if (!this.cdRef['destroyed']) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  private updateColorPicker(emit: boolean = true, update: boolean = true, cmykInput: boolean = false): void {\n    if (this.sliderDimMax) {\n      if (this.cpColorMode === 2) {\n        this.hsva.s = 0;\n      }\n\n      let hue: Rgba, hsla: Hsla, rgba: Rgba;\n\n      const lastOutput = this.outputColor;\n\n      hsla = this.service.hsva2hsla(this.hsva);\n\n      if (!this.cpCmykEnabled) {\n        rgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(this.hsva));\n      } else {\n        if (!cmykInput) {\n          rgba = this.service.hsvaToRgba(this.hsva);\n\n          this.cmyk = this.service.denormalizeCMYK(this.service.rgbaToCmyk(rgba));\n        } else {\n          rgba = this.service.cmykToRgb(this.service.normalizeCMYK(this.cmyk));\n\n          this.hsva = this.service.rgbaToHsva(rgba);\n        }\n\n        rgba = this.service.denormalizeRGBA(rgba);\n\n        this.sliderH = this.hsva.h;\n      }\n\n      hue = this.service.denormalizeRGBA(this.service.hsvaToRgba(new Hsva(this.sliderH || this.hsva.h, 1, 1, 1)));\n\n      if (update) {\n        this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100), Math.round(hsla.l * 100),\n          Math.round(hsla.a * 100) / 100);\n\n        this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\n\n        if (this.cpCmykEnabled) {\n          this.cmykText = new Cmyk(this.cmyk.c, this.cmyk.m, this.cmyk.y, this.cmyk.k,\n            Math.round(this.cmyk.a * 100) / 100);\n        }\n\n        const allowHex8 = this.cpAlphaChannel === 'always';\n\n        this.hexText = this.service.rgbaToHex(rgba, allowHex8);\n        this.hexAlpha = this.rgbaText.a;\n      }\n\n      if (this.cpOutputFormat === 'auto') {\n        if (this.format !== ColorFormats.RGBA && this.format !== ColorFormats.CMYK) {\n          if (this.hsva.a < 1) {\n            this.format = this.hsva.a < 1 ? ColorFormats.RGBA : ColorFormats.HEX;\n          }\n        }\n      }\n\n      this.hueSliderColor = 'rgb(' + hue.r + ',' + hue.g + ',' + hue.b + ')';\n      this.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n\n      this.outputColor = this.service.outputFormat(this.hsva, this.cpOutputFormat, this.cpAlphaChannel);\n      this.selectedColor = this.service.outputFormat(this.hsva, 'rgba', null);\n\n      if (this.format !== ColorFormats.CMYK) {\n        this.cmykColor = '';\n      } else {\n        if (this.cpAlphaChannel === 'always' || this.cpAlphaChannel === 'enabled' ||\n          this.cpAlphaChannel === 'forced')\n        {\n          const alpha = Math.round(this.cmyk.a * 100) / 100;\n\n          this.cmykColor = `cmyka(${this.cmyk.c},${this.cmyk.m},${this.cmyk.y},${this.cmyk.k},${alpha})`;\n        } else {\n          this.cmykColor = `cmyk(${this.cmyk.c},${this.cmyk.m},${this.cmyk.y},${this.cmyk.k})`;\n        }\n      }\n\n      this.slider = new SliderPosition(\n        (this.sliderH || this.hsva.h) * this.sliderDimMax.h - 8,\n        this.hsva.s * this.sliderDimMax.s - 8,\n        (1 - this.hsva.v) * this.sliderDimMax.v - 8,\n        this.hsva.a * this.sliderDimMax.a - 8\n      );\n\n      if (emit && lastOutput !== this.outputColor) {\n        if (this.cpCmykEnabled) {\n          this.directiveInstance.cmykChanged(this.cmykColor);\n        }\n\n        this.directiveInstance.colorChanged(this.outputColor);\n      }\n    }\n  }\n\n  // Private helper functions for the color picker dialog positioning\n\n  private setDialogPosition(): void {\n    if (this.cpDialogDisplay === 'inline') {\n      this.position = 'relative';\n    } else {\n      let position = 'static', transform = '', style;\n\n      let parentNode: any = null, transformNode: any = null;\n\n      let node = this.directiveElementRef.nativeElement.parentNode;\n\n      const dialogHeight = this.dialogElement.nativeElement.offsetHeight;\n\n      while (node !== null && node.tagName !== 'HTML') {\n        style = window.getComputedStyle(node);\n        position = style.getPropertyValue('position');\n        transform = style.getPropertyValue('transform');\n\n        if (position !== 'static' && parentNode === null) {\n          parentNode = node;\n        }\n\n        if (transform && transform !== 'none' && transformNode === null) {\n          transformNode = node;\n        }\n\n        if (position === 'fixed') {\n          parentNode = transformNode;\n\n          break;\n        }\n\n        node = node.parentNode;\n      }\n\n      const boxDirective = this.createDialogBox(this.directiveElementRef.nativeElement, (position !== 'fixed'));\n\n      if (this.useRootViewContainer || (position === 'fixed' &&\n         (!parentNode || parentNode instanceof HTMLUnknownElement)))\n      {\n        this.top = boxDirective.top;\n        this.left = boxDirective.left;\n      } else {\n        if (parentNode === null) {\n          parentNode = node;\n        }\n\n        const boxParent = this.createDialogBox(parentNode, (position !== 'fixed'));\n\n        this.top = boxDirective.top - boxParent.top;\n        this.left = boxDirective.left - boxParent.left;\n      }\n\n      if (position === 'fixed') {\n        this.position = 'fixed';\n      }\n\n      let usePosition = this.cpPosition;\n\n      if (this.cpPosition === 'auto') {\n        let usePositionX = 'right';\n        let usePositionY = 'bottom';\n\n        const winWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        const winHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\n        if (this.left + this.cpWidth > winWidth) {\n          usePositionX = 'left';\n        }\n\n        if (this.top + dialogHeight > winHeight) {\n          usePositionY = 'top';\n        }\n\n        usePosition = usePositionX + '-' + usePositionY;\n      }\n\n      this.cpUsePosition = usePosition;\n\n      if (usePosition === 'top') {\n        this.arrowTop = dialogHeight - 1;\n\n        this.top -= dialogHeight + this.dialogArrowSize;\n        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n      } else if (usePosition === 'bottom') {\n        this.top += boxDirective.height + this.dialogArrowSize;\n        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n      } else if (usePosition === 'top-left' || usePosition === 'left-top') {\n        this.top -= dialogHeight - boxDirective.height + boxDirective.height * this.cpPositionOffset / 100;\n        this.left -= this.cpWidth + this.dialogArrowSize - 2 - this.dialogArrowOffset;\n      } else if (usePosition === 'top-right' || usePosition === 'right-top') {\n        this.top -= dialogHeight - boxDirective.height + boxDirective.height * this.cpPositionOffset / 100;\n        this.left += boxDirective.width + this.dialogArrowSize - 2 - this.dialogArrowOffset;\n      } else if (usePosition === 'left' || usePosition === 'bottom-left' ||  usePosition === 'left-bottom') {\n        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;\n        this.left -= this.cpWidth + this.dialogArrowSize - 2;\n      } else { // usePosition === 'right' || usePosition === 'bottom-right' || usePosition === 'right-bottom'\n        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;\n        this.left += boxDirective.width + this.dialogArrowSize - 2;\n      }\n    }\n  }\n\n  // Private helper functions for the color picker dialog positioning and opening\n\n  private isDescendant(parent: any, child: any): boolean {\n    let node: any = child.parentNode;\n\n    while (node !== null) {\n      if (node === parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  }\n\n  private createDialogBox(element: any, offset: boolean): any {\n    return {\n      top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n      left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n}\n","import { Directive, OnChanges, OnDestroy, Input, Output, EventEmitter,\n  HostListener, ApplicationRef, ComponentRef, ElementRef, ViewContainerRef,\n  Injector, ReflectiveInjector, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\n\nimport { ColorPickerService } from './color-picker.service';\nimport { ColorPickerComponent } from './color-picker.component';\n\nimport { AlphaChannel, ColorMode, OutputFormat } from './helpers';\n\n@Directive({\n  selector: '[colorPicker]',\n  exportAs: 'ngxColorPicker'\n})\nexport class ColorPickerDirective implements OnChanges, OnDestroy {\n  private dialog: any;\n\n  private dialogCreated: boolean = false;\n  private ignoreChanges: boolean = false;\n\n  private cmpRef: ComponentRef<ColorPickerComponent>;\n  private viewAttachedToAppRef: boolean = false;\n\n  @Input() colorPicker: string;\n\n  @Input() cpWidth: string = '230px';\n  @Input() cpHeight: string = 'auto';\n\n  @Input() cpToggle: boolean = false;\n  @Input() cpDisabled: boolean = false;\n\n  @Input() cpIgnoredElements: any = [];\n\n  @Input() cpFallbackColor: string = '';\n\n  @Input() cpColorMode: ColorMode = 'color';\n\n  @Input() cpCmykEnabled: boolean = false;\n\n  @Input() cpOutputFormat: OutputFormat = 'auto';\n  @Input() cpAlphaChannel: AlphaChannel = 'enabled';\n\n  @Input() cpDisableInput: boolean = false;\n\n  @Input() cpDialogDisplay: string = 'popup';\n\n  @Input() cpSaveClickOutside: boolean = true;\n  @Input() cpCloseClickOutside: boolean = true;\n\n  @Input() cpUseRootViewContainer: boolean = false;\n\n  @Input() cpPosition: string = 'auto';\n  @Input() cpPositionOffset: string = '0%';\n  @Input() cpPositionRelativeToArrow: boolean = false;\n\n  @Input() cpOKButton: boolean = false;\n  @Input() cpOKButtonText: string = 'OK';\n  @Input() cpOKButtonClass: string = 'cp-ok-button-class';\n\n  @Input() cpCancelButton: boolean = false;\n  @Input() cpCancelButtonText: string = 'Cancel';\n  @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';\n\n  @Input() cpPresetLabel: string = 'Preset colors';\n  @Input() cpPresetColors: string[];\n  @Input() cpPresetColorsClass: string = 'cp-preset-colors-class';\n  @Input() cpMaxPresetColorsLength: number = 6;\n\n  @Input() cpPresetEmptyMessage: string = 'No colors added';\n  @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';\n\n  @Input() cpAddColorButton: boolean = false;\n  @Input() cpAddColorButtonText: string = 'Add color';\n  @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';\n\n  @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';\n\n  @Output() cpInputChange = new EventEmitter<{input: string, value: number | string, color: string}>(true);\n\n  @Output() cpToggleChange = new EventEmitter<boolean>(true);\n\n  @Output() cpSliderChange = new EventEmitter<{slider: string, value: string | number, color: string}>(true);\n  @Output() cpSliderDragEnd = new EventEmitter<{slider: string, color: string}>(true);\n  @Output() cpSliderDragStart = new EventEmitter<{slider: string, color: string}>(true);\n\n  @Output() colorPickerOpen = new EventEmitter<string>(true);\n  @Output() colorPickerClose = new EventEmitter<string>(true);\n\n  @Output() colorPickerCancel = new EventEmitter<string>(true);\n  @Output() colorPickerSelect = new EventEmitter<string>(true);\n  @Output() colorPickerChange = new EventEmitter<string>(false);\n\n  @Output() cpCmykColorChange = new EventEmitter<string>(true);\n\n  @Output() cpPresetColorsChange = new EventEmitter<any>(true);\n\n  @HostListener('click') handleClick(): void {\n    this.inputFocus();\n  }\n\n  @HostListener('focus') handleFocus(): void {\n    this.inputFocus();\n  }\n\n  @HostListener('input', ['$event']) handleInput(event: any): void {\n    this.inputChange(event);\n  }\n\n  constructor(private injector: Injector, private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,\n    private _service: ColorPickerService) {}\n\n  ngOnDestroy(): void {\n    if (this.cmpRef != null) {\n      if (this.viewAttachedToAppRef) {\n        this.appRef.detachView(this.cmpRef.hostView);\n      }\n\n      this.cmpRef.destroy();\n\n      this.cmpRef = null;\n      this.dialog = null;\n    }\n  }\n\n  ngOnChanges(changes: any): void {\n    if (changes.cpToggle && !this.cpDisabled) {\n      if (changes.cpToggle.currentValue) {\n        this.openDialog();\n      } else if (!changes.cpToggle.currentValue) {\n        this.closeDialog();\n      }\n    }\n\n    if (changes.colorPicker) {\n      if (this.dialog && !this.ignoreChanges) {\n        if (this.cpDialogDisplay === 'inline') {\n          this.dialog.setInitialColor(changes.colorPicker.currentValue);\n        }\n\n        this.dialog.setColorFromString(changes.colorPicker.currentValue, false);\n\n        if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\n          this.cmpRef.changeDetectorRef.detectChanges();\n        }\n      }\n\n      this.ignoreChanges = false;\n    }\n\n    if (changes.cpPresetLabel || changes.cpPresetColors) {\n      if (this.dialog) {\n        this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors);\n      }\n    }\n  }\n\n  public openDialog(): void {\n    if (!this.dialogCreated) {\n      let vcRef = this.vcRef;\n\n      this.dialogCreated = true;\n      this.viewAttachedToAppRef = false;\n\n      if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\n        const classOfRootComponent = this.appRef.componentTypes[0];\n        const appInstance = this.injector.get(classOfRootComponent, Injector.NULL);\n\n        if (appInstance !== Injector.NULL) {\n          vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\n\n          if (vcRef === this.vcRef) {\n            console.warn('You are using cpUseRootViewContainer, ' +\n              'but the root component is not exposing viewContainerRef!' +\n              'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.');\n          }\n        } else {\n          this.viewAttachedToAppRef = true;\n        }\n      }\n\n      const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);\n\n      if (this.viewAttachedToAppRef) {\n        this.cmpRef = compFactory.create(this.injector);\n        this.appRef.attachView(this.cmpRef.hostView);\n        document.body.appendChild((this.cmpRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement);\n      } else {\n        const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\n\n        this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\n      }\n\n      this.cmpRef.instance.setupDialog(this, this.elRef, this.colorPicker,\n        this.cpWidth, this.cpHeight, this.cpDialogDisplay, this.cpFallbackColor, this.cpColorMode,\n        this.cpCmykEnabled, this.cpAlphaChannel, this.cpOutputFormat, this.cpDisableInput,\n        this.cpIgnoredElements, this.cpSaveClickOutside, this.cpCloseClickOutside,\n        this.cpUseRootViewContainer, this.cpPosition, this.cpPositionOffset,\n        this.cpPositionRelativeToArrow, this.cpPresetLabel, this.cpPresetColors,\n        this.cpPresetColorsClass, this.cpMaxPresetColorsLength, this.cpPresetEmptyMessage,\n        this.cpPresetEmptyMessageClass, this.cpOKButton, this.cpOKButtonClass,\n        this.cpOKButtonText, this.cpCancelButton, this.cpCancelButtonClass,\n        this.cpCancelButtonText, this.cpAddColorButton, this.cpAddColorButtonClass,\n        this.cpAddColorButtonText, this.cpRemoveColorButtonClass);\n\n      this.dialog = this.cmpRef.instance;\n\n      if (this.vcRef !== vcRef) {\n        this.cmpRef.changeDetectorRef.detectChanges();\n      }\n    } else if (this.dialog) {\n      this.dialog.openDialog(this.colorPicker);\n    }\n  }\n\n  public closeDialog(): void {\n    if (this.dialog && this.cpDialogDisplay === 'popup') {\n      this.dialog.closeDialog();\n    }\n  }\n\n  public cmykChanged(value: string): void {\n    this.cpCmykColorChange.emit(value);\n  }\n\n  public stateChanged(state: boolean): void {\n    this.cpToggleChange.emit(state);\n\n    if (state) {\n      this.colorPickerOpen.emit(this.colorPicker);\n    } else {\n      this.colorPickerClose.emit(this.colorPicker);\n    }\n  }\n\n  public colorChanged(value: string, ignore: boolean = true): void {\n    this.ignoreChanges = ignore;\n\n    this.colorPickerChange.emit(value);\n  }\n\n  public colorSelected(value: string): void {\n    this.colorPickerSelect.emit(value);\n  }\n\n  public colorCanceled(): void {\n    this.colorPickerCancel.emit();\n  }\n\n  public inputFocus(): void {\n    const element = this.elRef.nativeElement;\n\n    const ignored = this.cpIgnoredElements.filter((item: any) => item === element);\n\n    if (!this.cpDisabled && !ignored.length) {\n      if (typeof document !== 'undefined' && element === document.activeElement) {\n        this.openDialog();\n      } else if (!this.dialog || !this.dialog.show) {\n        this.openDialog();\n      } else {\n        this.closeDialog();\n      }\n    }\n  }\n\n  public inputChange(event: any): void {\n    if (this.dialog) {\n      this.dialog.setColorFromString(event.target.value, true);\n    } else {\n      this.colorPicker = event.target.value;\n\n      this.colorPickerChange.emit(this.colorPicker);\n    }\n  }\n\n  public inputChanged(event: any): void {\n    this.cpInputChange.emit(event);\n  }\n\n  public sliderChanged(event: any): void {\n    this.cpSliderChange.emit(event);\n  }\n\n  public sliderDragEnd(event: { slider: string, color: string }): void {\n    this.cpSliderDragEnd.emit(event);\n  }\n\n  public sliderDragStart(event: { slider: string, color: string }): void {\n    this.cpSliderDragStart.emit(event);\n  }\n\n  public presetColorsChanged(value: any[]): void {\n    this.cpPresetColorsChange.emit(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TextDirective, SliderDirective } from './helpers';\n\nimport { ColorPickerService } from './color-picker.service';\nimport { ColorPickerComponent } from './color-picker.component';\nimport { ColorPickerDirective } from './color-picker.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  exports: [ ColorPickerDirective ],\n  providers: [ ColorPickerService ],\n  declarations: [ ColorPickerComponent, ColorPickerDirective, TextDirective, SliderDirective ],\n  entryComponents: [ ColorPickerComponent ]\n})\nexport class ColorPickerModule {}\n"]}